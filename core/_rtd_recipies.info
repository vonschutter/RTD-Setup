#!/bin/bash
#::                     S O F T W A R E    R E C I P I E S
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::// Linux //::::::::
#:: Author(s):   	SLS, KLS, NB.  Buffalo Center, IA & Avarua, Cook Islands
#:: Version 1.01
#::
#::
#::	Purpose: To define how software is added in one place.
#::		 Software may be downloaded and installed manually, or via package manager or snaps.
#::		 Configuration items are also defined here.
#::	Usage: call this file using the "source" statment in bash. Then simply invoke the relevant recipe (funclion)
#::
#::	This script is shared in the hopes that
#::	someone will find it usefull.
#::
#::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
#	NOTE:	This terminal program is written and documented to a very high degree. The reason for doing this is that
#		these apps are seldom changed and when they are, it is usefull to be able to understand why and how
#		things were built. Obviously, this becomes a useful learning tool as well; for all people that want to
#		learn how to write admin scripts. It is a good and necessary practice to document extensively and follow
#		patterns when building your own apps and config scripts. Failing to do so will result in a costly mess
#		for any organization after some years and people turnover.
#
#		As a general rule, we prefer using functions extensively because this makes it easier to manage the script
#		and facilitates several users working on the same scripts over time.
#
#
#	RTD admin scrips are placed in /opt/{_TLA}/scripts. Optionally scripts may use the common
#	functions in _rtd_library and _rtd_recipies.
#	  _rtd_library   -- contain usefull admin functions for scripts, such as "how to install software" on different systems.
#	  _rtd_recipies  -- contain software installation and configuration "recipies".
#
#	Use InstallSoftwareFromRepo, check_dependencies,   ,   
#	to install software as a general rule. These functions will make it simple to add software no matter what the underlying
#	distribution package managment is.
#
#	Only make special cases for packages that are not distributed in the distributions own repositories os as snaps or
#	flatpaks; for example if you must download from a vendors web site (like for example Google Chrome). In such a case
#	you may use the software::vendor_download_and_install function. It will automatically install the package at the url provided.
#
#	Scripts may also be stand-alone if there is a reason for this.
#
#	Taxonomy of this script: we prioritize the use of functions over monolithic script writing, and proper indentation
#	to make the script more readable. Each function shall also be documented to the point of the obvious.
#	Suggested function structure per google guidelines:
#
#	category::function_name () {
#		# Documentation and comments...
#		...code...
#	}
#
#
# ---------------------------------------------- SOFTWARE SOURCES --------------------------------------------------------------
#
#  Chosing an install source:
# +-----------------------------------------------------+------------------------------------+---------------------------------+
# | Source                                              | Pro                                | Con                             |
# +-----------------------------------------------------+------------------------------------+---------------------------------+
# | Native distro repository                            | supported, size, launch speed      | Version lagg, no containment    |
# | Snapcraft.io                                        | Containment, snapcrafters, support | slower launch, integration      |
# | Flathub.com                                         | Containment, open, performance     | Less good for Terminal apps     |
# | AppImage                                            | More self contained, just copy file| No control, no security         |
# | Developer PPA (Ubuntu + derivatives only)           | Known source, performance          | Only Ubuntu, no containement    |
# | Company web page download                           | Known source, performance          | Managment, no containment       |
# +-----------------------------------------------------+------------------------------------+---------------------------------+
#
# When chosing where to get the application from consider you selection strategy: what is important to you, 
# your users and others. What is the priority? Suggestion: 
# 	- Use contained applications where possible to have better overall security. 
#	- Use contained applications where possible to always have the updated version of an app
# 	- Use flathub.com first for GUI applications for performance and control (flatseal)
#	- Use Snapcraft.io for non GUI apps, as these apps are better implemented and no GUI performance issues
#	- Use Stapcraft or falthub depending on if the original developer provides the app in that format
#	- Use the distro native version if you need deep desktop integration, and latest version is not important
#	- Avoid the distro version if different distributions name their packages differently between eachother
#	- Prefer any contained version of an app for easier managment and support (no library issues)
# 	- Follow the path of availability: Contained > Native > vendor site > AppImage in that order
#
#
# ------------------ Installing software from the snap repository is prefferred for terminal apps -------------------------
#
# Snap is a software deployment and package management system developed by Canonical for the Linux operating system.
# The packages, called snaps, and the tool for using them, snapd, work across a range of Linux distributions
# allowing distribution-agnostic upstream software packaging. Snap application packages of software are self-contained
# and work across a range of Linux distributions. This is unlike traditional Linux package management approaches,
# like APT or YUM, which require specifically adapted packages for each Linux distribution therefore adding delay between
# application development and its deployment for end-users.
#
# Supported distributions:
# Arch Linux, CentOS, Debian, Fedora, Solus, Manjaro Linux, Linux Mint, OpenEmbedded, Raspbian, OpenWrt and openSUSE.
#
# Security:
# Snaps are also contained from a security point of view and only have the access really needed on a system. The user may
# add additional access descressionally through the "connect" command.
#
# ------------------- Installing software from the flathub repository is prefferred for GUI apps --------------------------
#
# Flatpak (formerly xdg-app) is a software utility for software deployment and package management for Linux. It is advertised
# as offering a sandbox environment in which users can run application software in isolation from the rest of the system.
# Applications using Flatpak need permissions to have access to Bluetooth, sound (with PulseAudio), network, files, etc.,
# permissions that are defined by the maintainer of the Flatpak and can be controlled (added or removed) by users on their
# system.
#
# Flathub, a repository (or remote source in the Flatpak terminology) that is located at flathub.org, has become the de facto
# standard for getting applications packaged with Flatpak. Packages are added to it by both the Flathub administrators and
# the developers of the programs themselves (though the admins have stated their preference for developer-submitted apps).
# Although Flathub is the de facto source for applications packaged with Flatpak, Flatpak can work independently of Flathub;
# it is possible to host a remote and access to remotes that are totally independent of Flathub.
#
# -------------------- Installing software from native distribution repositories  ------------------------------------------
#
# A Linux repository is a storage location from which your system retrieves and installs OS updates and applications.
# Each repository is a collection of software hosted on a remote server and intended to be used for installing and updating
# software packages on Linux systems. When you run commands such as “sudo apt update” or “sudo apt upgrade”, you may be pulling
# package information and package updates from a number of repositories.
#
#    ***Issues with native repositories are that distribusions may name packages differently making management difficult***
#
# For more information on package managers see: https://en.wikipedia.org/wiki/Package_manager
#
#
# ---------------------- PREFFERRED Contained Software install (Security + Control) ----------------------------------------
#
#  CAPABILITY TABLE:
# +-----------------------------------------------------+--------------------------------+----------------------------+----------------------+
# | Features                                            | Snap                           | Flatpak                    | AppImage             |
# +-----------------------------------------------------+--------------------------------+----------------------------+----------------------+
# | Permission Controls Toggles                         | Yes                            | Yes                        | No                   |
# | Sandboxing Support                                  | Yes                            | Yes                        | Yes                  |
# | Sandboxing Mandatory                                | Yes                            | Yes                        | No                   |
# | App Portability                                     | Yes                            | Yes                        | No                   |
# | Native Theme Support                                | Yes (with caveats)             | Yes (with caveats)         | Yes (with caveats)   |
# | Support for Bundled Libraries                       | Yes                            | Yes                        | Yes                  |
# | Fully Contained Single Executable Support           | No                             | No                         | Yes                  |
# | Online App Store                                    | Yes                            | Yes                        | Yes                  |
# | Multi-version Parallel Apps Support                 | Yes                            | Yes                        | Yes                  |
# | Automatic Updates                                   | Yes                            | Yes                        | Yes(with caveats)    |
# | Support for Chrome OS (through Crostini containers) | Yes                            | Yes                        | Yes                  |
# | App Size                                            | Higher than AppImage           | Higher than AppImage       | Lowest               |
# | Number of Applications Available in the App Store   | Highest                        | Lowest                     | Somewhere in between |
# | Plugins for Desktop App Store Software              | Yes                            | Yes                        | No                   |
# +-----------------------------------------------------+--------------------------------+----------------------------+----------------------+
#
#
#
# A new way to manage native packages on Linux PackageKit. PackageKit is a free and open-source suite of software
# applications designed to provide a consistent and high-level front end for a number of different package management systems.
# PackageKit simplifies how to manage software on several different linux distribution and may even be available on BSD flavors.
# The "software::vendor_download_and_install" function uses package kit because it can istall both rpms and debs, 
# locally and from the repositories.
#
# TEMPLATE: For adding a new menu entry for a single package or bundle of software:
#
#
#    system tag          name
#         |                |
# "recipe:_""descriptive_name" () {
# 			# function documentaton (shows on the menu)...
# 			# Echo to terminal using built in functions with color:
# 			write_error		: Prints an error message to terminal in RED
# 			write_host 		: Prints a message to the terminal w. a choice of color
# 			write_information 	: Prints a message to the terminal in BLUE
# 			write_status		: Prints a message to the terminal in GREEN
# 			write_warning 		: Prints a message to the terminal in YELLOW
#
# 			# Install software with distribution package manager (Agnostic)
# 			for i in package1 package2 package3 ; do
# 			     InstallSoftwareFromRepo $i
# 			done
#
# 			# Install flatpaks:
# 			  
# 			software::from_flathub.org package-name $1
#
# 			# Install snap packages:
# 			  
# 			software::from_snapcraft.io package-name $1
#
# 			# Check a dependency (install only if not present):
# 			check_dependencies package-name
#
#			NOTE: installing native packages may have caveats since distributions may name
#				packages differently. For example Fedora and Ubuntu name the 7z packages
#				differently.
#
#			NOTE2: the "$1" after the package-name is if you want to trap the --remove option for 
#				Bundle removals. This is optional.
# }






#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::: 	 ____       _   _   _                                ::::::::::::::::::::::
#:::::::::::::: 	/ ___|  ___| |_| |_(_)_ __   __ _ ___                ::::::::::::::::::::::
#:::::::::::::: 	\___ \ / _ \ __| __| | '_ \ / _` / __|               ::::::::::::::::::::::
#:::::::::::::: 	 ___) |  __/ |_| |_| | | | | (_| \__ \               ::::::::::::::::::::::
#:::::::::::::: 	|____/ \___|\__|\__|_|_| |_|\__, |___/               ::::::::::::::::::::::
#::::::::::::::                            |___/                             ::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# Setting govern how this list will behave.

# Set account on GIT Hub to fetch items from.
# NOTE: you may copy the rtd repository and update its contents. You redirect everything
#       by specifying the github user.
GIT_Profile=${GIT_Profile:-vonschutter}
bundle_prefix="recipe:_"







#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::		 ____                  _ _                           ::::::::::::::::::::::
#::::::::::::::		| __ ) _   _ _ __   __| | | ___  ___                 ::::::::::::::::::::::
#::::::::::::::		|  _ \| | | | '_ \ / _` | |/ _ \/ __|                ::::::::::::::::::::::
#::::::::::::::		| |_) | |_| | | | | (_| | |  __/\__ \                ::::::::::::::::::::::
#::::::::::::::		|____/ \__,_|_| |_|\__,_|_|\___||___/                ::::::::::::::::::::::
#::::::::::::::                                                              ::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Bundle are what will be displayed in the software Bundle selection menu.
# Bundle may be independent installs of several pieces of software and/or referencing
# multiple single installs (functions that install a single piece of software).


recipe:_Internet_Browsing_Private () {
	# Brave, Vivaldi, and Chromium browsers and KeePassXC password manager

	# Brave secure browser, vendor provided Snap.
	# If you prefer the downloaded version directly from Brave, uncomment the below line.
	# Single_Install_Brave_Browser
	software::from_snapcraft.io brave $1

	# Chromium is an open-source browser project that aims to build a safer, 
	# faster, and more stable way to experience the web. 
	software::from_flathub.org com.github.Eloston.UngoogledChromium $1

	# Tor Browser Launcher is intended to make the Tor Browser Bundle (TBB) easier to maintain 
	# and use for GNU/Linux users. It downloads the same TBB from torproject.org that everyone 
	# else uses, and it doesn't alter it in any way. But it does make it much more usable, and 
	# it makes the task of keeping it up-to-date more secure.
	software::from_flathub.org org.torproject.torbrowser-launcher $1

	# The Mullvad browser is a privacy-focused web browser based on Firefox.
	# Mullvad Browser is a free, open-source web browser that is designed to be
	# used with Mullvad VPN. It is based on Firefox and is designed to be
	# privacy-friendly, with features such as built-in ad-blocking, tracking
	# protection, and a focus on security. Mullvad Browser is available for
	# Windows, macOS, and Linux.
	distribution_type=$(system::distribution_type)

	case ${distribution_type} in
		"ubuntu" | "debian" )
			software::check_native_package_dependency curl
			curl -fsSLo /usr/share/keyrings/mullvad-keyring.asc https://repository.mullvad.net/deb/mullvad-keyring.asc
			echo "deb [signed-by=/usr/share/keyrings/mullvad-keyring.asc arch=$( dpkg --print-architecture )] https://repository.mullvad.net/deb/stable $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/mullvad.list
			software::up_2_date
			software::add_native_package mullvad-browser
		;;
		"fedora" | "redhat" )
			software::check_native_package_dependency dnf-utils
			dnf config-manager addrepo --from-repofile=https://repository.mullvad.net/rpm/stable/mullvad.repo
			dnf config-manager --add-repo https://repository.mullvad.net/rpm/stable/mullvad.repo
			software::up_2_date
			software::add_native_package mullvad-browser
		;;
		"suse" )
			write_warning "NOTE: This wrapper is not verified by, affiliated with, or supported by Mullvad VPN AB."
			write_warning "NOTE: Installing the flathub version of Mullvad browser."
			software::from_flathub.org net.mullvad.MullvadBrowser $1
		;;
		* )
			write_error "Mullvad browser is not supported in this distribution ( ${distribution_type} ) : skipping..."
		;;
	esac
}



recipe:_Internet_Browsing_Corporate () {
	# Google Chrome, Microsoft Edge, and Vivaldi browsers

	# Google Chrome is a browser that combines a minimal design with sophisticated 
	# technology to make the web faster, safer, and easier.
	# WARNING: will attempt to ttrack everything about you!
	software::from_flathub.org com.google.Chrome $1  

	# Introducing the new Microsoft Edge web browser. It’s time to expect more.
	# More privacy. More control. More productivity. More value.
	# WARNING: may attempt to ttrack everything about you!
	software::from_flathub.org com.microsoft.Edge $1

	# Opera is a fast and secure browser with built-in ad blocker, battery saver,
	# free VPN, social messengers, and more.
	# WARNING: may attempt to ttrack everything about you!
	software::from_flathub.org com.opera.Opera $1

	# The Vivaldi browser, not available in snap, or flatpak, nor in repo. 			
	write_information "Installing Vivaldi Browser directly from vendor repo..."
	if cat "/etc/os-release" | grep "debian" ; then
		apt -y install wget gnupg2 software-properties-common
		wget -qO- https://repo.vivaldi.com/archive/linux_signing_key.pub | sudo apt-key add -
		echo 'deb https://repo.vivaldi.com/archive/deb/ stable main' | sudo tee /etc/apt/sources.list.d/vivaldi.list
		apt update
		software::add_native_package vivaldi-stable
		return $?
	elif cat "/etc/os-release" | grep "fedora" ; then
		software::add_native_package dnf-utils
		dnf config-manager --add-repo https://repo.vivaldi.com/archive/vivaldi-fedora.repo
		software::add_native_package vivaldi-stable
		return $?
	elif  cat "/etc/os-release" | grep "suse" ; then
		zypper --gpg-auto-import-keys addrepo --refresh https://repo.vivaldi.com/archive/vivaldi-suse.repo
		software::add_native_package vivaldi-stable
		return $?
	else
		write_error "Neither debian, fedora, or suse base distros could be found; NOT installing vivaldi."
		return 1
	fi
}


recipe:_Virtualization_Desktop_Software () {
	# Virtualizaton tools (virt-manager, qemu-kvm)
	# NOTE: hypervisors are installed using ropositories own versions, or downloaded
	# Directly from the vendors web page.

	# Qemu-KVM GUI for managing virtual machines locally and remote		 
	software::add_native_package virt-manager $1

	# Very efficient hypervisor for running virtual machines
	software::add_native_package qemu-kvm $1
}



recipe:_CLOUD_Management_Options () {
	# Tools to manage cloud environments like GCP, Azure, AWS
	# NOTE: the "$1" after the package-name is if you want to trap the --remove option for 
	# Bundle removals. This is optional.

	# Azure Cloud
	software::from_snapcraft.io powershell $1 		# PowerShell is an automation and configuration management platform. 
	software::from_snapcraft.io azure-cli $1 		# Azure CLI 2.0, our next generation multi-platform command line experience for Azure.
	software::from_snapcraft.io storage-explorer $1		# Upload, download, and manage Azure blobs, files, queues, and tables.

	# Ubuntu Cloud Tool
	software::from_snapcraft.io ubuntu-cloud-image $1	# Find the latest Ubuntu Images for clouds
	software::from_snapcraft.io juju $1  			# Juju extends the idea of operators beyond Kubernetes to traditional machine environments, for multi cloud and hybrid cloud application management.
	software::from_snapcraft.io ubuntu-image $1  		# ubuntu-image is a tool used for creation of various Ubuntu preinstalled images, both classic and snap-based.

	# GCP Platform
	software::from_snapcraft.io google-cloud-sdk $1  	# Command-line interface for Google Cloud Platform products and services

	# AWS Platform
	software::from_snapcraft.io aws-cli $1  		# Universal Command Line Interface for Amazon Web Services
	software::from_snapcraft.io aws-iot-greengrass $1	# AWS supported software that extends cloud capabilities to local devices
	software::from_snapcraft.io amazon-ssm-agent $1  	# Agent to enable remote management of your Amazon EC2 instance configuration
}





recipe:_3D_Printing_Options () {
	# 3D Printing tools (Prusa, Cura slicers, and CAD, and 3D editing) for supporting and working with 3D-Printing
	# NOTE: the "$1" after the package-name is if you want to trap the --remove option for 
	# Bundle removals. This is optional.

	software::from_flathub.org com.ultimaker.cura $1
	# ! if you would prefer to use the snap package then please uncomment the lines below.
	# software::from_snapcraft.io cura-slicer $1		# Ultimaker Cura is the world’s most popular 3D printing software
	# 	snap connect cura-slicer:mount-observe
	# 	snap connect cura-slicer:removable-media

	software::from_flathub.org net.meshlab.MeshLab $1
	# ! if you would prefer to use the snap package then please uncomment the lines below.
	# software::from_snapcraft.io meshlab $1			# The open source system for processing and editing 3D triangular meshes

	software::from_flathub.org flathub com.prusa3d.PrusaSlicer $1
	# ! if you would prefer to use the snap package then please uncomment the lines below.
	# software::from_snapcraft.io prusa-slicer $1		# PrusaSlicer takes 3D models (STL, OBJ, AMF) and converts them into G-code instructions for FFF printers or PNG layers for mSLA 3D printers.
	# 	snap connect prusa-slicer:removable-media
	# 	snap connect prusa-slicer:mount-observe
	# 	snap connect prusa-slicer:udisks2
	# 	snap connect prusa-slicer:raw-usb

}


recipe:_Office:_CAD_Software_Options () {
	# CAD Sofware (Blender, FreeCAD, OpenSCAD, LeoCAD, Sweet Home 3D)
	# NOTE: the "$1" after the package-name is if you want to trap the --remove option for 
	# Bundle removals. This is optional.

	# Blender is the free and open source 3D creation suite
	software::from_flathub.org org.blender.Blender $1 

	# FreeCAD is an open-source parametric 3D modeler made primarily to design real-life 
	# objects of any size. Parametric modeling allows you to easily modify your 
	# design by going back into your model history and changing its parameters. 
	# It is designed to fit a wide range of uses including product design, mechanical 
	# engineering, architecture and 3D printing. 
	software::from_flathub.org org.freecadweb.FreeCAD $1

	# OpenSCAD is a software for creating solid 3D CAD objects. 
	# It focuses on CAD aspects rather than artistic ones
	software::from_flathub.org org.openscad.OpenSCAD $1

	# LeoCAD is a CAD program for creating virtual LEGO models.
	software::from_flathub.org flathub org.leocad.LeoCAD $1

	# This program is aimed at people who want to design their interior 
	# quickly, whether they are moving or they just want to redesign 
	# their existing home. Numerous visual guides help you draw the 
	# plan of your home and layout furniture.
	software::from_flathub.org com.sweethome3d.Sweethome3d $1
}


recipe:_Office:_Standard_Apps () {
	# Office apps like: Onlyoffice, Teams, Draw.io, Joplin notes, Mailspring, Keepass, and more
	# NOTE: the "$1" after the package-name is if you want to trap the --remove option for 
	# Bundle removals. This is optional.

	# A modern email client supporting a central management of many accounts.
	software::from_snapcraft.io mailspring $1

	# Excellent note-taking and note organization app
	software::from_snapcraft.io joplin-desktop $1

	# Best simple note app for sharing and collaboration on notes	
	software::from_snapcraft.io simplenote $1		

	# Excellent simple to use and streamlines office bundle
	software::from_flathub.org org.onlyoffice.desktopeditors  $1

	# Microsofts collaboration and conferencing tool
	software::from_flathub.org com.github.IsmaelMartinez.teams_for_linux $1

	# draw.io is the most flexible and privacy-focused of any production grade diagramming tool
	software::from_flathub.org com.jgraph.drawio.desktop $1   		
}



recipe:_Media_Streaming_Software () {
	# Streaming apps (Spotify, Stremio, Vocal, and Cozy audiobook reader)...
	
	# Install Steaming apps from the Snap store:  
	# Red is a neat, simple yet feature rich, privacy focused YouTube Player and Downloader
	# Red is not available as a Flatpak as of yet.
	software::from_snapcraft.io red-app $1				

	# Install Streaming apps from Flat Hub: 

	# Access all of your favorite music, discover new songs, and share music online with 
	# your friends - all in one place. Create shared playlists or share individual songs 
	# with your Facebook friends with just a click of a button. Follow your favorite artists 
	# or friends to know what they are listening to, and then save the songs to your own 
	# playlists. Spotify is the best way to have access to millions of songs, and all the latest hits.
	software::from_flathub.org com.spotify.Client $1

	# Watch videos, movies, TV series and TV channels instantly.
	software::from_flathub.org com.stremio.Stremio $1  		
	
	# Simle and easy to use pod cast player
	software::from_flathub.org com.github.needleandthread.vocal $1 
	
	# Plexamp - A beautiful Plex music player for audiophiles, curators, and hipsters.
	# ★★ You'll need a Plex Media Server and an active Plex Pass to use this app ★★
	# please see: https://www.plex.tv
	software::from_flathub.org com.plexamp.Plexamp $1

	# Plex client for desktop computers:
	# ★★ You'll need access to a Plex Media Server to use this app ★★
	# Plex for Linux is your client for playback on the Linux desktop. It features the 
	# point and click interface you see in your browser but uses a more powerful 
	# playback engine as well as some other advanced features.
	# To install the server part on another computer please follow the instructions on the 
	# PLEX website: https://www.plex.tv/media-server-downloads/#plex-media-server
	software::from_flathub.org tv.plex.PlexDesktop $1
}




recipe:_Media_Streaming_Servers () {
	# Streaming service (Plex Media Server)...

	# To install the server part on another computer please follow the instructions on the 
	# PLEX website: https://www.plex.tv/media-server-downloads/#plex-media-server
	software::from_snapcraft plexmediaserver $1
}



recipe:_Media_Players () {
	# Media Player Apps (VLC, Cozy Audio Book PLayer, Tauon Music Player)

	# Tauon Music Box is a modern, comfortable and streamlined music player for the playback of 
	# your music collection. Packed with features while maintaining simplicity. Use drag and 
	# drop for easy file importing and playlist management. Groups albums by folder and allows 
	# you to manage your music with built-in functions such as file and folder renaming,
	# cover art downloading and file deleting.
	software::from_flathub.org com.github.taiko2k.tauonmb $1

	# Cozy is a audio book player. Import all your audio books into Cozy to browse them comfortably
	software::from_flathub.org com.github.geigi.cozy $1

	# VLC is a free and open source cross-platform multimedia player and framework that plays
	# most multimedia files as well as DVDs, Audio CDs, VCDs, and various streaming protocols.
	# If you prefer to have VLC install from you repository you may comment out the line below. 
	# However, some distributions remove all the usefull codecs so VLC may not work fully. 
	# InstallSoftwareFromRepo vlc
	software::from_flathub.org org.videolan.VLC $1
}





recipe:_Media:_Audio_Editing_Options () {
	# Audio Tools Bundle including Music Brainz Picard, Audacity, Musescore...


	# Do you need to clean up your music library? Picard is an open-source 
	# cross-platform music tagger by MusicBrainz. It has the ability 
	# to identify audio files even without any existing metadata.
	software::from_flathub.org org.musicbrainz.Picard $1

	# Audacity® is a free, easy-to-use, multi-track audio editor and 
	# recorder for Windows, macOS, GNU/Linux and other operating systems.
	# The interface is translated into many languages.
	software::from_flathub.org org.audacityteam.Audacity $1

	# MuseScore is cross-platform, multi-lingual, open source music notation software. 
	# It features an easy to use WYSIWYG editor with audio score playback for results 
	# that look and sound beautiful
	# If you would like to use the snap version instead, you may un-comment the next few lines.
	software::from_flathub.org org.musescore.MuseScore $1
	# software::from_snapcraft.io musescore $1
	# 	snap connect musescore:cups-control
	# 	snap connect musescore:network-manager
	# 	snap connect musescore:alsa
	# 	snap connect musescore:removable-media
}


recipe:_Video_Editing_Options () {
	# Video editing apps; Vidcutter, Handbrake, Matroska-tools, Kdenlive, Shotcut, OBS, OpenShot
	# Install handbrake DVD/BlueRay ripper video converter
	# Video analysis tools
	# Popular video editor
	# Simle video crop/cut

	# Make sure that libdvdcss is available and ffmpeg... 
	software::ensure_restricted_codecs

	# MakeMKV is your one-click solution to convert video that you own into 
	# free and patents-unencumbered format that can be played everywhere. MakeMKV 
	# is a format converter, otherwise called "transcoder". 
	software::from_flathub.org com.makemkv.MakeMKV $1

	# Video subtitle editor that supports basic and advanced editing operations
	software::from_flathub.org org.kde.subtitlecomposer $1

	# K3b was created to be a feature-rich and easy to handle CD burning application.
	software::from_snapcraft.io k3b $1

	# Free and open source 3D creation suite
	software::from_flathub.org org.blender.Blender $1

	# Shotcut is a free and open-source cross-platform video editing application
	software::from_flathub.org org.shotcut.Shotcut $1

	# Kdenlive is a non linear video editor. 
	software::from_flathub.org org.kde.kdenlive $1

	# MKVToolNix is a set of tools to create, alter and inspect Matroska files
	software::from_flathub.org org.bunkus.mkvtoolnix-gui $1

	# HandBrake is a tool for converting video from nearly any format to a selection of modern, widely supported codecs
	software::from_flathub.org fr.handbrake.ghb $1

	# A modern, simple to use, constantly evolving and hella fast MEDIA CUTTER + JOINER
	software::from_flathub.org com.ozmartians.VidCutter $1

	# Live streaming and video recording software
	software::from_flathub.org com.obsproject.Studio $1

	# OpenShot can create stunning videos, films, and animations with an easy-to-use interface and rich set of features
	software::from_flathub.org org.openshot.OpenShot $1

	# Flowblade is a multitrack non-linear video editor, helps make your vision a reality of image and sound
	software::from_flathub.org io.github.jliljebl.Flowblade $1

}







recipe:_Developer_Software () {
	# For creating code: (VSCode, GitKraken, Neo VIM, Helix) and more..

	# Git and build essentials (compiler) is available in the distribution
	# repository
	software::add_native_package build-essential
	software::add_native_package git

  	# For repo management, in-app code editing & issue tracking
	software::from_snapcraft.io gitkraken $1

	# Visual Studio Code is a new choice of tool that combines the simplicity 
	# of a code editor with what developers need
	software::from_flathub.org com.visualstudio.code $1

	# Helix is a terminal-based text editor inspired by Kakoune / Neovim and written in Rust.
	# - Vim-like modal editing
	# - Multiple selections
	# - Built-in language server support
	# - Smart, incremental syntax highlighting and code editing via tree-sitter
	software::from_flathub.org com.helix_editor.Helix $1

	# Neovim is a refactor of the Vim text editor designed to encourage new 
	# features, advanced UIs, and powerful extensions. SUggestion: use the 
	# snap version to enusre the latest neovm and good terminal (non-gui) integration.
	# software::from_flathub.org io.neovim.nvim $1
	software::from_snapcraft.io nvim $1
	# NvChad is built upon its personal plugins and many general neovim plugins, 
	# below are the features that are provided by nvchad plugins ( our ui plugin, 
	# base46, extensions, nvterm, nvim-colorizer )... 
	# Please comment out the folowing line if you do not want NeoVim customizations.
	git clone https://github.com/NvChad/NvChad "/home/${SUDO_USER}/.config/nvim" --depth 1 
	chown -R $SUDO_USER "/home/${SUDO_USER}/.config/nvim"
	mkdir -p /etc/skel/.config ; cp -u -R "/home/${SUDO_USER}/.config/nvim" "/etc/skel/.config/nvim"
}


recipe:_ADM:_Compression_Tools () {
	# Compression Toolset (zip, 7zip rar etc.)...

	# - 7-Zip is a free and open-source file archiver, a utility used to place groups 
	# of files within compressed containers known as "archives". It is developed by 
	# Igor Pavlov and was first released in 1999. 7-Zip has its own archive format 
	# called 7z, but can read and write several others.
	# - RAR is a proprietary archive file format that supports data compression, error 
	# correction and file spanning. It was developed in 1993 by Russian software 
	# engineer Eugene Roshal and the software is licensed by win.rar GmbH. 
	# The name RAR stands for Roshal Archive.
	# - ZIP is an archive file format that supports lossless data compression. 
	# A ZIP file may contain one or more files or directories that may have 
	# been compressed. The ZIP file format permits a number of compression 
	# algorithms, though DEFLATE is the most common.
	
	if hash dnf &>/dev/nul ; then 
		write_information "Fedora based software management found, assuming fedora based distribution..."
		for i in p7zip-gui p7zip p7zip-plugins zip; do
			software::add_native_package $i
		done
	elif hash zypper &>/dev/nul ; then 
		write_information "OpenSUSE based software management found, assuming OpenSUSE based distribution..."
		for i in 7zip rar zip ; do
			software::add_native_package $i
		done
	elif hash apt &>/dev/nul ; then 
		write_information "Debian based software management found, assuming Debian based distribution..."
		for i in p7zip-full p7zip-rar rar zip ; do
			software::add_native_package $i
		done
	else
		write_error "No supported software management found, assuming unsupported distribution..."
	fi
}



recipe:_Top_Curated_Games_for_Linux () {
	# Top rated Games: Steam platform, and Minecraft, OpenaArena, 0AD, SuperTuxCart etc.

	# 0 A.D. is a real-time strategy (RTS) game of ancient warfare.
	#software::from_snapcraft.io 0ad $1
	software::from_flathub.org "com.play0ad.zeroad" $1

	# A 3D arcade racer with a variety of characters, tracks, and modes to play
	#software::from_snapcraft.io supertuxkart $1
	software::from_flathub.org "net.supertuxkart.SuperTuxKart" $1

	# A 2D space shooter with awesome visual effects and attractive physics.
	#software::from_snapcraft.io marsshooter $1
	software::from_flathub.org "com.github.fabiocolacio.marsshooter" $1

	# dm-tools is a collection of tools for Dungeons and Dragons 5e	
	#software::from_snapcraft.io dm-tools $1
	
	# Join people all over the world playing Minecraft, one of the most popular videogames around!
	software::from_flathub.org "com.mojang.Minecraft" $1

	# Survival horror set on a remote island known as Fort Oasis
	software::from_flathub.org "com.moddb.TotalChaos" $1

	# Hardcore 3D space scroll-shooter with spaceship upgrade possibilities	
	software::from_flathub.org "com.viewizard.AstroMenace" $1

	# Space exploration and combat game		
	software::from_flathub.org "io.github.EndlessSky.endless-sky" $1

	# Albion Online is a sandbox MMORPG set in an open medieval fantasy world	
	software::from_flathub.org "com.albiononline.AlbionOnline" $1

	# An immersive puzzle adventure game where you hack your way to saving the day!	
	software::from_flathub.org "com.endlessnetwork.aqueducts" $1

	# Do you love playing billiards, or have you ever wanted to learn how to play	
	software::from_flathub.org "de.billardgl.Billardgl" $1

	# OpenArena is a free and open source first-person shooter game based heavily on the Quake III Arena-style deathmatch		
	software::from_flathub.org "ws.openarena.OpenArena" $1


	# Install Valves Steam Client for gaming: gives access to thousands of commercial games.
	
	if InstallSoftwareFromRepo steam; then
	package_url=""
		if command -v rpm &> /dev/null; then
			package_url="https://steamcdn-a.akamaihd.net/client/installer/steam.rpm"
		elif command -v apt &> /dev/null; then
			package_url="https://steamcdn-a.akamaihd.net/client/installer/steam.deb"
		fi
    
		if [ -n "$package_url" ]; then
			software::vendor_download_and_install "$package_url"
		else
			distribution=$(lsb_release -sd)
			write_error "I am not sure how to find the Steam download for $distribution." \
			"Please try to download it manually and install it from the website:" \
			"https://store.steampowered.com/about/"
		fi
    	fi
    
}





recipe:_3_System_Admin_Tools () {
	# System Admin Tools (nmap synaptic ssh gparted sshfs htop iftop nethogs glances)...
	# System Admin tools for managing and monitoring your system.
	# NOTE: the "$1" after the package-name is if you want to trap the --remove option for
	# Bundle removals. This is optional.

	AdminToolsAppList="nmap synaptic ssh sshfs htop iftop nethogs glances bmon btop \
		vim vim-scripts variety diodon polari filezilla dialog byobu bleachbit gparted"

	for i in ${AdminToolsAppList}
	do
		software::add_native_package $i
	done
	
}




recipe:_ADM:_Linux_Subsystem_for_Windows (){
	# Run windows programs! includes wine, DOS, and Acrobat reader, Notepad++, and more...

	# Wine runtime environment for windows apps.	
	software::add_native_package wine
	
	# A DOS virtual environment!				
	software::from_snapcraft.io dosbox-x $1
	
	# Adobe Acrobat Reader is a pdf reader & Web services developed by Adobe Inc.				
	software::from_snapcraft.io acrordrdc $1
	
	# notepad-plus-plus is a free source code editor for Windows			
	software::from_snapcraft.io notepad-plus-plus $1
	
	# Resourcehacker is a resource extraction utility and resource compiler		
	software::from_snapcraft.io resourcehacker $1
	
	# File Manager For Professionals.	 		
	software::from_snapcraft.io multicommander $1
}




recipe:_Digital_Art_and_Imaging_Options () {
	# Createive art software; Krita, GIMP, Inkscape, Flameshot, Upscayl, Photoscape

	# It is perfect for sketching and painting, and presents an end–to–end solution for creating 
	# digital painting files from scratch by masters.
	software::from_flathub.org org.kde.krita $1

	# Whether you are a graphic designer, photographer, illustrator, or scientist, GIMP provides 
	# you with sophisticated tools to get your job done.
	software::from_flathub.org org.gimp.GIMP $1

	# Inkscape is a Free and open source vector graphics editor.				
	software::from_flathub.org org.inkscape.Inkscape $1

	# PhotoScape is a fun and easy photo editing software that enables you to fix and enhance photos		
	software::from_snapcraft.io photoscape $1

	# Upscayl is a sophisticated, user-friendly app designed to elevate your image upscaling
	# experience. With its state-of-the-art AI technology, this open-source software empowers
	# users to enhance the resolution and quality of their images effortlessly. Upscayl lets
	# you enlarge and enhance low-resolution images using advanced AI algorithms.
	software::from_snapcraft.io upscayl $1
}




recipe:_2_OEM_Restricted_Fonts () {
	# Install Legacy TruType standard font pack an more...
	# wget "https://www.dropbox.com/s/y16d8wpb45yebv8/True_Type_Font_Pack.7z" -P /opt/rtd/cache/
	# mkdir -p /usr/share/fonts/truetype/oem
	# This bundle depends on teh compressions tools bundle...
	recipe:_Compression_Tools
	bash $(find /opt -name plus-themes.sh) --fonts
}



recipe:_SEC:_Secure_Communication_Options () {
	# Secure communications software: Signal, Telegram, Electron mail
	# This software is end to end encrypted
	# and generally does not share keys with the vendor. Also, these apps are confined on the desktop
	# meaning that they cannot access the wich is not granted explicitly.
	
	# Encrypted person to person chat/call/conferencing  
	# The signal snap package integrates bettwer than the flatpak package.
	software::from_snapcraft.io signal-desktop $1
	snap set signal-desktop tray-icon=true

	# Encrypted chat, group commmunications
	software::from_snapcraft.io telegram-desktop $1

	# Uses protonmail.com (encrypted mail)
	software::from_snapcraft.io electron-mail $1
}




recipe:_Office:_Social_Collaboration_and_Communicaiton () {
	# This bundle includes social media communications software: Discord, Skype
	# for privacy, but may be encrypted. This software is often useful for legacy reasons
	# or used for gaming.

	# Official Snap: All-in-one voice and text chat for gamers that's free, and works on both your desktop and phone.  
	software::from_snapcraft.io discord $1				
		snap connect discord:system-observe

	# Official Snap:  Connect, Create, Talk & Discover, now with Bing GPT-4
	software::from_snapcraft.io skype $1	

	# Send free messages and make free calls to other Viber users on any device and network, in any country!
	software::from_flathub.com com.viber.Viber $1
}




recipe:_Clean:_Remove_non_western_latin_fonts () {
	# Declutter the font manager by removing non-western fonts
	# By default distros includes wierd fonts not used in the west.
	rtd_oem_remove_non_western_latin_fonts



}
recipe:_SEC:_Password_Management () {
	# Password management software (Bitwarden, KeePassXC)...
	# Loop through each item in this list of software and perform an install
	# using the relevant packaging system.
	software::from_flathub.org org.keepassxc.KeePassXC $1
	software::from_flathub.org org.bitwarden.desktop $1

}
recipe:_SEC:_Secure_Storage () {
	# Secure storage software (Cryptomator, VeraCrypt)...
	# Loop through each item in this list of software and perform an install
	# using the relevant packaging system.
	software::from_flathub.org org.cryptomator.Cryptomator $1
	software::from_flathub.org com.veracrypt.VeraCrypt $1
}


recipe:_SEC:_network_security () {
	# Network security tools (Wireshark, nmap, tcpdump, iperf3, netcat, aircrack-ng)...
	# Loop through each item in this list of software and perform an install
	# using the relevant packaging system.
	software::add_native_package wireshark $1
	software::add_native_package nmap $1
	software::add_native_package tcpdump $1
	software::add_native_package iperf3 $1
	software::add_native_package netcat $1
	software::add_native_package aircrack-ng $1
}

recipe:_SEC:_Proton_Suite_of_Ecrypted_Services () {
	# Proton suite of software (ProtonVPN, ProtonMail Bridge, ProtonDrive)...
	# Loop through each item in this list of software and perform an install
	# using the relevant packaging system.

	distribution_type=$(system::distribution_type)

	case ${distribution_type} in
		"ubuntu" | "debian")
			sotware::vendor_download_and_install https://repo.protonvpn.com/debian/dists/stable/main/binary-all/protonvpn-stable-release_1.0.8_all.deb
			software::add_native_package proton-vpn-gnome-desktop  $1
			software::add_native_package libayatana-appindicator3-1 $1
			software::add_native_package gir1.2-ayatanaappindicator3-0.1 $1 
			software::add_native_package gnome-shell-extension-appindicator  $1
			software::add_native_package protonmail-bridge  $1
			software::add_native_package protondrive $1
		;;
		* )
			write_error "Proton is not supported on the detected distribution ( ${distribution_type} ): skipping..."
		;;
	esac
}

recipe:_SEC:_VPN_Software () {
	# VPN software (Wireguard, OpenVPN, Mullvad-vpn)...
	# This bundle is not removable. It contains downloaded software from sites. 
	# Loop through each item in this list of software and perform an install
	# using the relevant packaging system.

	distribution_type=$(system::distribution_type)

	case ${distribution_type} in
		"ubuntu" | "debian" )
			software::add_native_package wireguard
			software::add_native_package openvpn
			software::check_native_package_dependency curl
			curl -fsSLo /usr/share/keyrings/mullvad-keyring.asc https://repository.mullvad.net/deb/mullvad-keyring.asc
			echo "deb [signed-by=/usr/share/keyrings/mullvad-keyring.asc arch=$( dpkg --print-architecture )] https://repository.mullvad.net/deb/stable $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/mullvad.list
			software::up_2_date
			software::add_native_package mullvad-vpn
		;;
		"suse" | "opensuse" | "fedora" | "redhat" )
			software::add_native_package wireguard
			software::add_native_package openvpn
			case ${distribution_type} in
				"fedora" | "redhat")
					dnf config-manager addrepo --from-repofile=https://repository.mullvad.net/rpm/stable/mullvad.repo
					dnf config-manager --add-repo https://repository.mullvad.net/rpm/stable/mullvad.repo
					software::up_2_date
					software::add_native_package mullvad-vpn
				;;
			*)
				write_error "Mullvad is not supported on the detected distribution ( ${distribution_type} ): skipping..."
			esac
		;;
		* )
			write_error "Spported distribution ( ${distribution_type} ) not found: skipping..."
		;;
	esac
}

recipe:_ADM:_Advanced_Terminals () {
	# Advanced terminal apps (Warp AI Terminal, Tilix)...
	# This bundle is not removable. It contains downloaded software from sites. 
	# Loop through each item in this list of software and perform an install
	# using the relevant packaging system.

	distribution_type=$(system::distribution_type)

	case ${distribution_type} in
		"ubuntu" | "debian")
			wget -qO- https://releases.warp.dev/linux/keys/warp.asc | gpg --dearmor > warpdotdev.gpg
			sudo install -D -o root -g root -m 644 warpdotdev.gpg /etc/apt/keyrings/warpdotdev.gpg
			sudo sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/warpdotdev.gpg] https://releases.warp.dev/linux/deb stable main" > /etc/apt/sources.list.d/warpdotdev.list'
			rm warpdotdev.gpg
			software::update_system_txt
			software::add_native_package warp-terminal
		;;
		suse | opensuse | fedora | redhat)
			software::vendor_download_and_install https://releases.warp.dev/stable/warp-terminal-x86_64.rpm
		;;
		*)
			write_error "Warp is not supported on the detected distribution ( ${distribution_type} )..."
			exit 1
	esac

	software::add_native_package tilix
}


recipe:_1_OEM_Themes_and_Tweaks () {
	# Configuration, tweaks, and settings for a better user experience (KDE or Gnome).
	write_status "Applying OEM Configuration...
	This bundle includes all OEM speciffic setting and configurations for desktops.
	This may include some basic application seen as, well, basic, and shold always be there.
	This will also include some UI configuration and settings to improve usability,
	and the look and feel based on what a user may be used to."

	# -------------------------------------------------------------------------------------------------------#
	recipe:_ADM:_Compression_Tools
	security::enable_firewall --minecraft
	oem::rtd_tools_make_launchers
	software::ensure_software_store_available
	oem::check_boot_splash_screen_enable /opt/rtd/preseed.cfg
	oem::check_boot_splash_screen_enable /root/original-ks.cfg
	system::tune_system_power_profile

	# -------------------------------------------------------------------------------------------------------#


	# [Task 5] Configure UI Tweaks
	# -------------------------------------------------------------------------------------------------------#
	# Apply tweaks to the UI based on desktop active
	if  ps -e |grep "gnome-shell"; then

		# [Task 5.1] Add extensions:
		# -------------------------------------------------------------------------------------------------------
		# To fully support themes and customixzations the Gnome environment requires extensions and
		# theme modules "engines" that change the look and feel of buttons and widgets. Also, additional
		# software is needed to change from one them to another.

		write_information "Adding UI themes..."
		write_information "Fonud the gnome UI on this system! Adding OEM customizations..."
		# Special case for Fedora: Add the gnome UI tweak tool...

		_DISTRO=$(system::distribution_type)
		case $_DISTRO in
			"fedora")
			# Enable the extra repositories in fedora to get access to the espected software.
			software::check_native_package_dependency "fedora-workstation-repositories"
		esac

		software::check_native_package_dependency gnome-tweaks
		software::check_native_package_dependency make
		software::check_native_package_dependency sassc
		software::check_native_package_dependency gettext

		# For critical important extensions try to install from package manager first
		software::check_native_package_dependency "dash-to-dock"
		software::check_native_package_dependency "dash-to-panel"
		software::add_native_package "gnome-shell-extension-manager"
		software::add_native_package "gnome-extensions-app"

		# Install the wanted shell extensions that can be found in the distributions repository
		# 	615:	appindicator		307:  	dash-to-dock
		# 	517: 	caffeine		1160: 	dash-to-pannel
		# 	1319: 	gsconnect		8: 	Places Status Indicator
		# 	6: 	application-menu	3628: 	ArcMenu
		# 	19: 	user-themes		97: 	Coverflow Alt-Tab
		# 	7: 	removable-drive-menu	1852: 	GameMode
		# 	906: 	Sound Input/Output Chooser
		software::add_gnome_extensions 615 307 517 1160 1319 6 19 7 906 1852 97 3628 8

		write_information "Adding UI themes..."
		source ${_THEME_DIR}/plus-themes.sh || write_error "There was a problem installing themes... "
		software::add_native_package arc-theme || write_error "There was a problem installing Arc-themes... "

		tempfile=$( mktemp )
		chmod 777 ${tempfile}
		cat > ${tempfile} <<-EOF
			#!/bin/bash
			source ${_OEM_DIR}/core/_rtd_library
			set_gnome_ui_common_tweaks_for_user
		EOF
		system::run_command_in_gnome_user_session /bin/bash ${tempfile}
		rm -f ${tempfile}

		if [[ -e /opt/${_TLA,,} ]] ; then
			write_information "This system was built by an OEM process: copying tweaks for all new users..."
			mkdir -p /etc/skel/.config
			cp -r /home/${SUDO_USER}/.config/dconf /etc/skel/.config/dconf
			write_information "Done copying tweaks for all new users..."
		else
			write_information "Only implementing tweaks for the current user..."
		fi
		# -------------------------------------------------------------------------------------------------------
	fi


	if  ps -e |grep "plasmashell" ; then
		# -------------------------------------------------------------------------------------------------------
		write_information "Detected KDE UI!"
		if [[ -e ${_THEME_DIR}/plus-themes.sh ]] ; then 
			bash ${_THEME_DIR}/plus-themes.sh || write_error "There was a problem installing themes... "
		else 
			oem::deploy_themes
			bash ${_THEME_DIR}/plus-themes.sh || write_error "There was a problem installing themes... "
		fi

		if [[ -e /opt/${_TLA,,} ]] ; then
			write_information "This system was built by an OEM process: copying tweaks for all new users..."
			cp -r /home/${SUDO_USER}/.config /etc/skel/
			cp -r /home/${SUDO_USER}/.local /etc/skel/
			mkdir -p /etc/skel/{Documents,Downloads,Pictures,Videos,Music,Desktop,Templates,Public}
			write_information "Done copying tweaks for all new users..."
		else
			write_information "Only implementing tweaks for the current user..."
		fi
		sudo -H -E -u $SUDO_USER  bash -c "source /opt/rtd/core/_rtd_library ; rtd_oem_kde_set_wallpaper ${_WALLPAPER_DIR}/Wayland.jpg"
		# for i in $(snap connections | grep gtk-common-themes:gtk-3-themes | awk '{print $2}'); do sudo snap connect $i vimix-themes:gtk-3-themes; done
		# sudo -E -H -u $SUDO_USER XDG_RUNTIME_DIR="/run/user/${SUDO_UID}" bash -c '/usr/bin/lookandfeeltool -a RTD-Win11-Dark --resetLayout'
		# -------------------------------------------------------------------------------------------------------
	fi
}



recipe:_RDP:_Team_Viewer_Remote_Desktop_by () {
	# Teamviewer remote desktop software that allows you to connect to other computers
	# and control them remotely. It is often used for remote support, online meetings, and
	# collaboration. TeamViewer is available for Windows, macOS, Linux, and mobile platforms.
	# TeamViewer is a proprietary software, and it requires a license for commercial use.
	write_status  "Installing Teamviewer..."

	# Download either a deb or an rpm depending on what package format this system supports.
	# Team Viewer has a special package for SUSE; thus we check if OS is suse or not as well.
	if hash apt &>/dev/nul; then
		software::vendor_download_and_install https://download.teamviewer.com/download/linux/teamviewer_amd64.deb
	elif hash zypper &>/dev/nul; then
		software::vendor_download_and_install https://download.teamviewer.com/download/linux/teamviewer-suse.x86_64.rpm
	elif hash dnf &>/dev/nul; then
		software::vendor_download_and_install https://download.teamviewer.com/download/linux/teamviewer.x86_64.rpm
	else
		write_error "No RPM or DEB package managment service was found! ..."
	fi
}

recipe:_RDP:_Remmina_Remote_Desktop () {
	# Remmina is a remote desktop client that supports multiple protocols, including RDP, VNC, SSH, and SPICE.
	# It is designed for Linux and other Unix-like operating systems. Remmina is open-source software and is
	# available for free. It is often used by system administrators and IT professionals for remote access
	# to servers and workstations.
	write_status "Installing Remmina remote desktop... "
	software::add_native_package remmina
	software::add_native_package remmina-plugin-rdp
	software::add_native_package remmina-plugin-vnc
	write_status "Installing Remmina remote desktop extras... "
	software::add_native_package remmina-plugin-secret
	software::add_native_package remmina-plugin-spice
	software::add_native_package remmina-plugin-telepathy
}

recipe:_RDP:_Chrome_Remote_Desktop () {
	# Chrome Remote Desktop is a remote access service that allows users to remotely control their computers
	# using the Google Chrome web browser. It is available as a Chrome extension and can be used on various
	# operating systems, including Windows, macOS, Linux, and Chrome OS. Chrome Remote Desktop is free to use
	# and provides a simple way to access your computer from anywhere with an internet connection.
	write_status "Installing Chrome remote desktop... "
	software::from_flathub.org com.google.ChromeRemoteDesktop $1
}


recipe:_RDP:_Anydesk_Remote_Desktop () {
	# Anydesk is a remote desktop software that allows users to connect to and control remote computers.
	# It is designed for remote support, online collaboration, and remote access to computers from anywhere.
	# Anydesk is available for various platforms, including Windows, macOS, Linux, Android, and iOS.

	write_status "Installing Anydesk remote desktop... "
	software::from_flathub.org com.anydesk.Anydesk   
}


recipe:_CLOUD:_MEGA_Cloud_Storage () {
	# MEGA nz Private Cloud Storage (better than Drop Box)...
	write_status "Installing MEGA nz file crypto sync utility..."

	# Reset & clear variables in case of incomplete cleanup...
	FILE2GET=
	URL=
	fetch_mega_file ()
	{
		product=$1
		if hostnamectl | grep -i "Debian" ; then
			# Grab the debian name and version and format it like Mega does their download URL...
			URL="https://mega.nz/linux/repo/Debian_$(hostnamectl |grep -i Debian |cut -f5 -d' ')/amd64/${product}-Debian_$(hostnamectl |grep -i Debian |cut -f5 -d' ')_amd64.deb"
			write_information "Downloading ${product} from: ${URL}"			
		elif hostnamectl | grep -i "Ubuntu" ; then
			# Grab the Ubuntu name and version and format it like Mega does their download URL...
			URL="https://mega.nz/linux/repo/xUbuntu_$(hostnamectl |grep -i Ubuntu |cut -f4 -d' ')/amd64/${product}-xUbuntu_$(hostnamectl |grep -i Ubuntu |cut -f4 -d' ')_amd64.deb"
			write_information "Downloading ${product} from: ${URL}"			
		elif hostnamectl | grep -i "openSUSE" ; then
			# Grab the SUSE name and version and format it like Mega does their download URL...
			TGT=$(hostnamectl | awk -F ': ' '/Operating System:/ {gsub(/ /, "_", $2); print $2}')
			URL="https://mega.nz/linux/repo/${TGT}/x86_64/${product}-${TGT}.x86_64.rpm"
			write_information "Downloading ${product} from: ${URL}"
		elif hostnamectl | grep -i "Fedora" ; then
			# Grab the Fedora name and version and format it like Mega does their download URL...
			TGT="$(hostnamectl |grep -i Fedora |cut -f7 -d' ')_$(hostnamectl |grep -i Fedora |cut -f9 -d' ')"
			URL="https://mega.nz/linux/repo/${TGT}/x86_64/${product}-${TGT}.x86_64.rpm"
			write_information "Downloading ${product} from: ${URL}"
		else
			write_error "I am not sure how to find the Mega sync download for $( hostnamectl |grep "Operating") "
			write_error "Please try to download it manually and instrtall it from the website:"
			write_error "https://mega.nz/sync"

		fi

		# If a known distributio was found and URL set, use "software::vendor_download_and_install" function to install app...
		if [[ -n "${URL}" ]] && software::vendor_download_and_install ${URL}; then
			write_information "MEGA software installed successfully..."
		else
			write_error "MEGA software did not install correctly..."
		fi
	}
	fetch_mega_file megasync
	fetch_mega_file megacmd
	if is_software_package_installed nautilus ; then fetch_mega_file nautilus-megasync ; fi
	if is_software_package_installed thunar ; then fetch_mega_file thunar-megasync ; fi
	if is_software_package_installed nemo ; then fetch_mega_file nemo-megasync ; fi
	if is_software_package_installed dolphin ; then fetch_mega_file dolphin-megasync ; fi
}



recipe:_CLOUD:_Dropbox_Cloud_Storage (){
	# File hosting service that offers cloud storage
	write_status "Installing Dropbox Cloud Storage Sync..."
	if hash apt &>/dev/nul; then
		write_warning "Please NOTE that Doropox only supports Ubuntu"
		software::vendor_download_and_install https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2022.12.05_amd64.deb
		InstallSoftwareFromRepo nautilus-dropbox
	elif hash dnf &>/dev/nul; then 
		software::vendor_download_and_install https://www.dropbox.com/download?dl=packages/fedora/nautilus-dropbox-2022.12.05-1.fedora.x86_64.rpm
		InstallSoftwareFromRepo nautilus-dropbox
	elif hash zypper &>/dev/nul; then 
		write_error "SUSE is not supported by Dropbox. You may try to download and compile it yourself
		at: https://help.dropbox.com/installs/linux-commands"
	else 
		write_error "Dropox does not seem to have been installed..."
	fi
}



recipe:_RDP:_Citrix_App (){
	# Install Citrix Workspace
	write_status "Installing Citrix Workspace..."
	if hash apt &>/dev/nul; then
		write_warning "Please NOTE that Citrix only supports Ubuntu"
		software::vendor_download_and_install "https://downloads.citrix.com/22439/icaclient_23.11.0.82_amd64.deb?__gda__=exp=1705538522~acl=/*~hmac=6a7fae42307cba95d027460b757da754de67be03b83e91475a1004be65bfbecd"
		# Special requirement for Citrix Workspace on Ubuntu 20.04
		if [[ "$(lsb_release -si)" == "Ubuntu" && "$(lsb_release -sr)" == "20.04" ]]; then
			apt-get install libunwind-12 libc++-12-dev libc++1-12 libc++abi-12-dev libc++abi1-12 -y
		fi
	elif hash dnf &>/dev/nul; then
		write_warning "Please NOTE that Citrix only supports Ubuntu"
		software::vendor_download_and_install "https://downloads.citrix.com/22439/ICAClient-rhel-23.11.0.82-0.x86_64.rpm?__gda__=exp=1705538522~acl=/*~hmac=6a7fae42307cba95d027460b757da754de67be03b83e91475a1004be65bfbecd"
	elif hash zypper &>/dev/nul; then
		write_warning "Please NOTE that Citrix only supports Ubuntu"
		software::vendor_download_and_install "https://downloads.citrix.com/22439/ICAClient-suse-23.11.0.82-0.x86_64.rpm?__gda__=exp=1705538522~acl=/*~hmac=6a7fae42307cba95d027460b757da754de67be03b83e91475a1004be65bfbecd"
	else
		write_error "No supported packaging system detected for special case of installing Citrix Workspace! "
	fi
}



 recipe:_Virtualization:_VirtualBox () {
	# Oracle Virtual Box desktop virtualization software. 
	# NOTE:
	# VirtualBox is a powerful x86 and AMD64/Intel64 virtualization product for enterprise as well as
	# home use. Not only is VirtualBox an extremely feature rich, high performance product for enterprise
	# customers, it is also the only professional solution that is freely available as Open Source Software
	# under the terms of the GNU General Public License (GPL) version 2. See "About VirtualBox" for an introduction.
	# Presently, VirtualBox runs on Windows, Linux, Macintosh, and Solaris hosts and supports a large number
	# of guest operating systems including but not limited to Windows (NT 4.0, 2000, XP, Server 2003, Vista, Windows 7,
	# Windows 8, Windows 10), DOS/Windows 3.x, Linux (2.4, 2.6, 3.x and 4.x), Solaris and OpenSolaris, OS/2, and OpenBSD.
	# VirtualBox is being actively developed with frequent releases and has an ever growing list of features,
	# supported guest operating systems and platforms it runs on. VirtualBox is a community effort backed by a
	# dedicated company: everyone is encouraged to contribute while Oracle ensures the product always meets professional
	# quality criteria. VirtualBox is not provided as a Snap or Flatpak, and must silently be installed with some logic
	# using the distribution speciffic package manager.
	#
	check_dependencies virt-what

	# Special case for installing VirtualBox since distributions name the package and install in different ways...
	if virt-what ; then
		write_warning "This computer is likely a Virtual Machine ( $(virt-what) ) and using Virtualbox inside a VM is not reccommended."
	else
		if hash apt &>/dev/nul ; then
			write_information "--- Installing VirtualBox in Debian based system if available..."
			# Unlike RPM based systems DEB's are allowed to ask questions in the middle of an install:
			echo virtualbox virtualbox/module-compilation-allowed boolean true | /usr/bin/debconf-set-selections
			echo virtualbox virtualbox/delete-old-modules boolean true | /usr/bin/debconf-set-selections

			for i in virtualbox virtualbox-dkms virtualbox-ext-pack virtualbox-guest-additions-iso
			do
				InstallSoftwareFromRepo $i
			done

			[[ "$DESKTOP_SESSION" == "plasma" ]] || InstallSoftwareFromRepo virtualbox-qt

			# Ensure that the current user can use USB etc...
			if id -nG "$SUDO_USER" | grep -qw "vboxusers"; then
				write_information "$SUDO_USER already belongs to vboxusers group"
			else
				usermod -G vboxusers -a $SUDO_USER
			fi
		elif hash dnf &>/dev/nul; then
			write_information "Installing VirtualBox in a Red Hat based system if available..."
			InstallSoftwareFromRepo VirtualBox
			if wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | rpm --import - ; then
				write_information "Oracle public key imported successfully..."
			else
				write_error "Oracle public key import failed..."
				return 1
			fi

			cat > /etc/yum.repos.d/virtualbox.repo <<-EOF
			[VirtualBox]
			name=Fedora $releasever - $basearch - VirtualBox
			baseurl=http://download.virtualbox.org/virtualbox/rpm/fedora/$releasever/$basearch
			enabled=1
			gpgcheck=1
			repo_gpgcheck=1
			gpgkey=https://www.virtualbox.org/download/oracle_vbox.asc
			EOF
			dnf -y install @development-tools kernel-devel kernel-headers dkms -y
			dnf -y install VirtualBox
		elif hash zypper &>/dev/nul ; then
			write_information "Installing virtualbox in a SUSE based system..."
			for i in virtualbox virtualbox-dkms virtualbox-ext-pack virtualbox-guest-additions-iso
			do
				InstallSoftwareFromRepo $i
			done

			[[ "$DESKTOP_SESSION" == "plasma" ]] || InstallSoftwareFromRepo virtualbox-qt

			# Ensure that the current user can use USB etc...
			if id -nG "$SUDO_USER" | grep -qw "vboxusers"; then
				write_information "$SUDO_USER already belongs to vboxusers group"
			else
				usermod -G vboxusers -a $SUDO_USER
			fi
		else
			write_error "No supported packaging system detected for special case of installing Virtual Box! "
		fi
	fi
}


