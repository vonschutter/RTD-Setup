#!/bin/bash
#
#::                                          A D M I N   C O M M A N D
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::// System managment Setup Script //::::::::::::::::::::::::::::// Ubuntu //:::::::
#::
#:: Author:   	SLS
#:: Version 	1.00
#::
#::
#::	Purpose: The purpose of the script is to install and configure landscape for ubuntu so it can be managed from
#::		 a single location.
#::
#::     Usage:	Simply execute this commandlet to accomplish this task. No parameters required.
#:: 		Then, when prompted; enter the information requested.
#::
#::     	To understand how t use Landscape please refer to: https://landscape.canonical.com/
#::
#::
#::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
#
#
# This  script was originally developed for RuntimeData, a small OEM in Buffalo Center, IA.
# This OEM and store nolonger exists as its owner has passed away.
# This script is shared in the hopes that someone will find it useful.
#
# This script is intended to live in the ~/bin/ or /bin/ folder, alternatively in the $PATH.
#

#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::          Script Functions                ::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

check_rtd_library ()
{
        # Set library path if not defined:
        scriptdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
        rtd_library=${rtd_library:-"${scriptdir}/../../core/_rtd_library"}

        if [[ -f ${rtd_library} ]]; then
                source ${rtd_library}
        elif [[ ! -f ${rtd_library} ]]; then
                echo "RTD Functions not found... "
                echo "Trying to retrieve them..."
                wget https://github.com/vonschutter/RTD-Build/raw/master/System_Setup/_rtd_library
                source ./_rtd_library
        else
                exit 1
        fi
}

#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::          Script Executive                ::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# Ensure access to the rtd library functions:
check_rtd_library
# Ensure elevated privs:
ensure_admin
# Ensure all updates are applied:
up2date
# Check that "dialog" is available:
check_dependencies dialog

# The name of the local managment server
LOCALSERVER=$(dialog --title "${Title:="$( basename $0 )"}" --backtitle "${BRANDING:-"$( basename $0 )"}" --stdout --inputbox "\n Please enter the name of the local landscaps server. \n " 10 90 )
LOCALSERVERIP=$(dialog --title "${Title:="$( basename $0 )"}" --backtitle "${BRANDING:-"$( basename $0 )"}" --stdout --inputbox "\n Please enter the IP Address of the local landscap server. \n " 10 90 )
# Since landscape is only relevant for Ubuntu; its OK to you distro speciffic commands...
apt-get install landscape-client -y -q
echo "ssl_public_key = /etc/landscape/landscape_server_ca.crt" >>/etc/landscape/client.conf
write_status "---------------- clinet.conf  -----------"
cat /etc/landscape/client.conf
echo "${LOCALSERVERIP}       ${LOCALSERVER}" >>/etc/hosts
write_status "----------------  hosts -----------------"
cat /etc/hosts
write_status "---------  Get CA from ${LOCALSERVER} ---------"
echo Enter password for ${LOCALSERVER} below:
scp ${USER}@${LOCALSERVER}:/etc/landscape/*.crt /etc/landscape/
landscape-config --computer-title "${HOSTNAME}" --account-name standalone  -p ${PASSTOKEN} --url https://${LOCALSERVER}/message-system --ping-url http://${LOCALSERVER}/ping && result="Sucessfully enrolled with the lanscape server ${LOCALSERVER}" || result="Failed to enroll with the lanscape server ${LOCALSERVER}"
display_result "$( basename $0 )"

