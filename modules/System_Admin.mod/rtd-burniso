#!/bin/bash
#
#::                                           A D M I N   C O M M A N D
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::// Simple bootable CD/DVD creation Tool //:::::::::::::::::::::// Linux //::::::::
#::
#:: Author:   	SLS
#:: Version 	1.00
#::
#::
#::	Purpose: The purpose of the script is to write an ISO file to an optical device verbatim.
#::
#::
#::     Usage:	Simply execute this commandlet passing the parameter indicating where the ISO is located
#:: 		to accomplish this task.
#::
#::     	Example:
#::		rtd-burniso path/to/file.iso
#::
#::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
# Additional information:
#
# An ISO image is a disk image of an optical disc. In other words, it is an archive file that contains everything that would
# be written to an optical disc, sector by sector, including the optical disc file system.[1] ISO image files bear the .iso
# filename extension. The name ISO is taken from the ISO 9660 file system used with CD-ROM media, but what is known as an
# ISO image might also contain a UDF (ISO/IEC 13346) file system (commonly used by DVDs and Blu-ray Discs).
#
# ISO images can be created from optical discs by disk imaging software, or from a collection of files by optical disc authoring
# software, or from a different disk image file by means of conversion. Software distributed on bootable discs is often available
# for download in ISO image format. And like any other ISO image, it may be written to an optical disc such as CD or DVD.
#
# This  script was originally developed for RuntimeData, a small OEM in Buffalo Center, IA.
# This OEM and store nolonger exists as its owner has passed away.
# This script is shared in the hopes that someone will find it useful.
#
# This script is intended to live in the ~/bin/ or /bin/ folder, alternatively in the $PATH.
#
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::          Script Functions                ::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

check_rtd_library ()
{
        # Set library path if not defined:
        scriptdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
        rtd_library=${rtd_library:-"${scriptdir}/../../core/_rtd_library"}

        if [[ -f ${rtd_library} ]]; then
                source ${rtd_library}
        elif [[ ! -f ${rtd_library} ]]; then
                echo "RTD Functions not found... "
                echo "Trying to retrieve them..."
                wget https://github.com/vonschutter/RTD-Build/raw/master/System_Setup/_rtd_library
                source ./_rtd_library
        else
                exit 1
        fi
}

###########################################################################
##                                                                       ##
##                       Script Executive                                ##
##                                                                       ##
###########################################################################

# Ensure access to the rtd library functions:
check_rtd_library

# Check syntax this script is called with:
if [[ -z "$1" ]]; then
        write_error "You must provide atleast one argument!
        Example: $0 ~/my_videos.iso"
        exit 1
fi

# Check that the indicated iso file exists:
if [[ ! -f "$1" ]]; then
        write_error "The file $1 dies not exist or is not readable!"
        exit 1
fi

# Ensure that "cdrecord" is available on the system:
check_dependencies cdrecord

# Write iso to device:
$IN = $ARGV[0];
print "Writing the ISO file $IN to the cd... \n";
print 'dd if=$IN | cdrecord -speed=16 dev=0,0,0 -eject -data -'
