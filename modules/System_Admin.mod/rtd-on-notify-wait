#!/bin/bash
#
#::                                      A D M I N   C O M M A N D L E T
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::// Simple Admin Tool //::::::::::::::::::::::::::::::::::::::::// Linux //::::::::
#::
#:: Author:   	SLS
#:: Version 	1.02
#::
#::
#::	Purpose: The purpose of this script is to clear out zombie processes.
#::		 This may be useful in troubleshooting. It may work, but depending on the cause
#::		 of the zombification it may or may not work.
#::     Usage:	Simply execute this commandlet to accomplish this task. No parameters required.
#::
#::
#::
#::
#::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
#
# This script was originally developed for RuntimeData, a small OEM in Buffalo Center, IA.
# This OEM and store nolonger exists as its owner has passed away.
# This script is shared in the hopes that someone will find it usefull.
#
# This script is instended to live in the ~/bin/ folder.
#
# Purpose:
# Watch current directory (recursively) for file changes, and execute
# a command when a file or directory is created, modified or deleted.
#
# Original Written by: Senko Rasic <senko.rasic@dobarkod.hr>
#
# Requires Linux, bash and inotifywait (from inotify-tools package).
#
# To avoid executing the command multiple times when a sequence of
# events happen, the script waits one second after the change - if
# more changes happen, the timeout is extended by a second again.
#
# Installation:
#     chmod a+rx rtd-on-notify-wait
#     sudo cp rtd-on-notify-wait "to somewhere in your path" or ~/bin
#
# Example use - rsync local changes to the remote server:
#
#    rtd-on-notify-wait rsync -avt . host:/remote/dir
#
#
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::          Script Functions                ::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

check_rtd_library ()
{
        # Set library path if not defined:
        scriptdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
        rtd_library=${rtd_library:-"${scriptdir}/../../core/_rtd_library"}

        if [[ -f ${rtd_library} ]]; then
                source ${rtd_library}
        elif [[ ! -f ${rtd_library} ]]; then
                echo "RTD Functions not found... "
                echo "Trying to retrieve them..."
                wget https://github.com/vonschutter/RTD-Build/raw/master/System_Setup/_rtd_library
                source ./_rtd_library
        else
                exit 1
        fi
}


check_rtd_library
io_on_notify_wait
