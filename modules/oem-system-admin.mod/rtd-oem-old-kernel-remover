#!/bin/bash
PUBLICATION="${_TLA} Simple Global OEM Kernel Remover"
VERSION="0.01"
#
#::             Linux Kernel Remover Script
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::// Linux //::::
#:: Author(s):   	SLS
#:: Version 1.00
#::
#::
#::	Purpose:       The purpose of this script is to remove all old kernels on a system. This is usefull when you get the
#::                    error message that /boot is out of space...
#::
#::
#::	Dependencies: - There may be dependencies like make and other development utilities.
#::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::






#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::          Script Functions                ::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::





dependency::_rtd_library ()
{
	_src_url=https://github.com/${_GIT_PROFILE}/RTD-Setup/raw/main/core/_rtd_library

	if source "$( cd "$( dirname "$(readlink -f ${BASH_SOURCE[0]})" )" && pwd )"/../core/_rtd_library ; then
		write_information "${FUNCNAME[0]} 1 Using:  $( cd "$( dirname "$(readlink -f ${BASH_SOURCE[0]})" )" && pwd )"/../core/_rtd_library
	elif source "$( cd "$( dirname "$(readlink -f ${BASH_SOURCE[0]})" )" && pwd )"/../../core/_rtd_library ; then
		write_information "${FUNCNAME[0]} 2 Using:  $( cd "$( dirname "$(readlink -f ${BASH_SOURCE[0]})" )" && pwd )"/../core/_rtd_library
	elif source $(find /opt -name _rtd_library |grep -v bakup ) ; then
		write_information "${FUNCNAME[0]} 3 Using: $(find /opt -name _rtd_library |grep -v bakup )"
	elif wget ${_src_url} ; then
                write_information "${FUNCNAME[0]} 4 Using: ${_src_url}"
		source ./_rtd_library
	else
		echo -e "RTD functions NOT found!"
		return 1
	fi
}



#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::          Logic and Flow Control          ::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
dependency::_rtd_library || (exit 1 ; echo "Failed to load Library")

system::exec () {
	confirmation=$($RTD_GUI --backtitle "$PUBLICATION" --colors --title "\Z1 Warning!" --inputbox " \n
	Removing old kernels by script could be risky. An error could
	result in all kernels being removed making your system un-usable. \n
	\n
	Please type 'YES' in to the field below to confirm that you understand that this
	process may render your computer unbootaple. \n" 15 78  3>&1 1>&2 2>&3)
		case $? in
			0 )
			case ${confirmation} in
				YES | yes | Yes ) system::remove_old_kernel ;;
				* ) clear ; write_status "You did not confirm, exiting." ; exit 1 ;;
			esac
			;;
			1 ) clear ; write_status "You selected to not remove kernels..." ; return 1 ;;
			255) clear ; write_status "you pressed escape... " ; return 1 ;;
		esac

}
system::exec


