#!/bin/bash
PUBLICATION="${_TLA} Simple Global OEM Application Launcher"
VERSION="1.00"
#
#::             Linux Theme Installer Script
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::// Linux //::::
#:: Author(s):   	SLS
#:: Version 1.00
#::
#::
#::	Purpose: The purpose of this script is to securely run OEM applications. OEM applicatioins are some selected 
#::		 applications used for OEM related system management. 
#::
#::	Dependencies: - There may be dependencies like make and other development utilities.
#::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::






#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::          Script Functions                ::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


dependency::_rtd_library ()
{
	_src_url=https://github.com/${_GIT_PROFILE}/RTD-Setup/raw/main/core/_rtd_library

	if source "$( cd "$( dirname "$(readlink -f ${BASH_SOURCE[0]})" )" && pwd )"/../core/_rtd_library ; then
		write_information "${FUNCNAME[0]} 1 Using:  $( cd "$( dirname "$(readlink -f ${BASH_SOURCE[0]})" )" && pwd )"/../core/_rtd_library
	elif source $(find /opt -name _rtd_library |grep -v bakup ) ; then
		write_information "${FUNCNAME[0]} 2 Using: $(find /opt -name _rtd_library |grep -v bakup )"
	elif wget ${_src_url} ; then
		source ./_rtd_library
	else
		echo -e "RTD functions NOT loaded!"
		return 1
	fi
}



oem::run_payload ()
{
	if [[ -r "${_APPS_DIR}/${1}.7z" ]] ; then 
		if [[ "$(md5sum "${_APPS_DIR}/${1}.7z" |awk '{print $1;}')" = "$(cat "${_CORE_DIR}/sigs/${1}.sig" |awk '{print $1;}')" ]] ; then
			7z x "${_APPS_DIR}/${1}.7z" -aoa -o${2} &>/dev/null 
			chmod +x ${2}/${1}
			if file ${2}/${1} | grep "Windows" ; then
				if hash wine ; then 
					wine ${2}/${1} &>/dev/null
					return
				else
					dialog --backtitle "RTD Power Tools" \
					--title "Something Went Wrong" \
					--yes-label "Install Wine" \
					--no-label "Cancel" \
					--yesno "\nWINE is needed to run windows programs on Linux. However, WINE is not installed. \
					Please install WINE and try again. \n\n \
					I could try to install Wine for you if you wish? \
					$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )\
					Should I do that? " 20 80
					response=$?
					
					case $response in
						0) ensure_admin ; check_dependencies wine ;;
						1) return ;;
						255) echo "[ESC] key pressed.";;
					esac
				fi
			else
				${2}/${1} &>/dev/null
			fi
			return
		else
			echo "Failed to verify security of application!"
			return 1 
		fi
	else 
		echo "No such application present!"
	fi
}

internal::chk_param_payload ()
{

	if [[ -z "${1}" ]] ; then 
		display::oem_program_list
	else
		if [[ -r "${_APPS_DIR}/${1}.7z" ]] ; then 
			write_information "Runnig OEM application ${1}"
			oem::run_payload ${1} $( mktemp -d )
			return
		else 
			case ${1} in 
				--help ) display::help ;;
				*) display::help ;;
			esac
			exit
		fi
	fi
}


display::help ()
{
	write_warning "	
	To use this application to start OEM apps please
	try the following:
	" 
	write_host --cyan "	${BASH_SOURCE[0]} application
	"

	write_information "	Installed OEM applications are: 
	------------------------------
$( for i in $(for file in ${_APPS_DIR}/*.7z ; do echo "${file##*/}" ; done ); do write_host --red "	${i::-3}" ; done )
	"
	write_host --cyan "	To use the menu of apps to start, please run ${BASH_SOURCE[0]} with no parameters at all.\n"
exit
}


display::oem_program_list ()
{
	while true; do
		exec 3>&1
			local n=1
			local _proglist="$(
				for i in $(for file in ${_APPS_DIR}/*.7z ; do echo "${file##*/}" ; done );
				do 
					echo  "${i::-3}" 
					((n=n+1)) 
				done
				)"
			_run=$(dialog --backtitle "RTD Power Tools" --no-items --ok-label "Start" --cancel-label "EXIT" --menu "Please Choose an OEM Application to Start"  25 80 20 $_proglist 2>&1 1>&3 )
			exit_status=$?
			clear
		exec 3>&-

		case $exit_status in
			1) clear && echo [Cancel] && exit ;;
			255) clear && echo [ESC] && exit ;;
		esac

		case $_run in
			$_run )
				oem::run_payload ${_run} $( mktemp -d )
				display::oem_program_list
			;;
			* ) exit ;;
		esac
	done
	
	
}

#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::          Logic and Flow Control          ::::::::::::::::::::::
#::::::::::::::                                          ::::::::::::::::::::::
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


dependency::_rtd_library &>/dev/null
hash 7z &>/dev/null || check_dependencies p7zip
hash wine &>/dev/null || check_dependencies wine
hash md5sum &>/dev/null || (echo "I cannot start OEM apps without security validation software!" ; exit 1)
internal::chk_param_payload ${1}






